<objdefs>
   <obj.normal id="mux 5" uuid="fe4b0ec4a6c8c8ceacfd84c1884d103193d4b9d3" sha="ab317448183d8e7e948576ca1f48f0272516a75b">
      <upgradeSha>6240dcbddc3274a9d4775d62d9df85f5019c2adc</upgradeSha>
      <sDescription>input multiplexer. Output is i1 when s &lt; 1, i[i] when....</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>mux.axh</helpPatch>
      <inlets>
         <frac32 name="i0" description="input 0"/>
         <frac32 name="i1" description="input 1"/>
         <frac32 name="i2" description="input 2"/>
         <frac32 name="i3" description="input 3"/>
         <frac32 name="i4" description="input 4"/>
         <int32.positive name="s" description="select"/>
      </inlets>
      <outlets>
         <frac32 name="o" description="output"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[   switch(inlet_s>0?inlet_s:0){
      case 0: outlet_o= inlet_i0;break;
      case 1: outlet_o= inlet_i1;break;
      case 2: outlet_o= inlet_i2;break;
      case 3: outlet_o= inlet_i3;break;
      case 4: outlet_o= inlet_i4;break;
      default: outlet_o= inlet_i4;break;
}
]]></code.krate>
   </obj.normal>
   <obj.normal id="mux 5" uuid="7c841c0403062a5c3d3ba3ede70abd0922a89ef6" sha="5c6e217dbee69bac28be23fff998c95997f52c59">
      <upgradeSha>ed5528ddc125564d81ab025c86e17db6081c6b6e</upgradeSha>
      <sDescription>input multiplexer. Output is i1 when s &lt; 1, i[i] when....</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>mux.axh</helpPatch>
      <inlets>
         <int32 name="i0" description="input 0"/>
         <int32 name="i1" description="input 1"/>
         <int32 name="i2" description="input 2"/>
         <int32 name="i3" description="input 3"/>
         <int32 name="i4" description="input 4"/>
         <int32.positive name="s" description="select"/>
      </inlets>
      <outlets>
         <int32 name="o" description="output"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[   switch(inlet_s>0?inlet_s:0){
      case 0: outlet_o= inlet_i0;break;
      case 1: outlet_o= inlet_i1;break;
      case 2: outlet_o= inlet_i2;break;
      case 3: outlet_o= inlet_i3;break;
      case 4: outlet_o= inlet_i4;break;
      default: outlet_o= inlet_i4;break;
}
]]></code.krate>
   </obj.normal>
   <obj.normal id="mux 5" uuid="3e76a5bfd7e6acc8ccb7f01014d3efe9f18e78d6" sha="d98b62571685c915a5cbd8ee2565e8e4593c09b7">
      <upgradeSha>fe8ec095c7c96137560cf46365397786f24c2b45</upgradeSha>
      <sDescription>input multiplexer. Output is i1 when s &lt; 1, i[i] when....</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>mux.axh</helpPatch>
      <inlets>
         <frac32buffer name="i0" description="input 0"/>
         <frac32buffer name="i1" description="input 1"/>
         <frac32buffer name="i2" description="input 2"/>
         <frac32buffer name="i3" description="input 3"/>
         <frac32buffer name="i4" description="input 4"/>
         <int32.positive name="s" description="select"/>
      </inlets>
      <outlets>
         <frac32buffer name="o" description="output"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.srate><![CDATA[   switch(inlet_s>0?inlet_s:0){
      case 0: outlet_o= inlet_i0;break;
      case 1: outlet_o= inlet_i1;break;
      case 2: outlet_o= inlet_i2;break;
      case 3: outlet_o= inlet_i3;break;
      case 4: outlet_o= inlet_i4;break;
      default: outlet_o= inlet_i4;break;
}
]]></code.srate>
   </obj.normal>
   <obj.normal id="mux 5" uuid="978e0d90a77ffd9028bfbcd6d76c0adc41473632" sha="db85bd26aefb76bfffd67b0213b777f9c5409683">
      <upgradeSha>a3ca4e37cea479c32b2c5b2409502af1bfe8dfb8</upgradeSha>
      <sDescription>input multiplexer. Output is i1 when s &lt; 1, i[i] when....</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>mux.axh</helpPatch>
      <inlets>
         <bool32 name="i0" description="input 0"/>
         <bool32 name="i1" description="input 1"/>
         <bool32 name="i2" description="input 2"/>
         <bool32 name="i3" description="input 3"/>
         <bool32 name="i4" description="input 4"/>
         <int32.positive name="s" description="select"/>
      </inlets>
      <outlets>
         <bool32 name="o" description="output"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[   switch(inlet_s>0?inlet_s:0){
      case 0: outlet_o= inlet_i0;break;
      case 1: outlet_o= inlet_i1;break;
      case 2: outlet_o= inlet_i2;break;
      case 3: outlet_o= inlet_i3;break;
      case 4: outlet_o= inlet_i4;break;
      default: outlet_o= inlet_i4;break;
}
]]></code.krate>
   </obj.normal>
   <obj.normal id="mux 5" uuid="c040f3ce39a31c64f2c86041cc90c3b18178c782" sha="dd577f3e6f4ea00f42f364548cbe53701791a018">
      <upgradeSha>cfa511bc84cfdebc365acb49881d535642e5628f</upgradeSha>
      <sDescription>input multiplexer. Output is i1 when s &lt; 1, i[i] when....</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>mux.axh</helpPatch>
      <inlets>
         <charptr32 name="i0" description="input 0"/>
         <charptr32 name="i1" description="input 1"/>
         <charptr32 name="i2" description="input 2"/>
         <charptr32 name="i3" description="input 3"/>
         <charptr32 name="i4" description="input 4"/>
         <int32.positive name="s" description="select"/>
      </inlets>
      <outlets>
         <charptr32 name="o" description="output"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[   switch(inlet_s>0?inlet_s:0){
      case 0: outlet_o= (char *)inlet_i0;break;
      case 1: outlet_o= (char *)inlet_i1;break;
      case 2: outlet_o= (char *)inlet_i2;break;
      case 3: outlet_o= (char *)inlet_i3;break;
      case 4: outlet_o= (char *)inlet_i4;break;
      default: outlet_o= (char *)inlet_i4;break;
}
]]></code.krate>
   </obj.normal>
</objdefs>