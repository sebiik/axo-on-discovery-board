<objdefs>
   <obj.normal id="comp" uuid="2d62720d6a597c586936be74ebb1e1c449772636" sha="cda5bd26e9fc97319943991cca7cf2da17496790">
      <upgradeSha>32cf18b5f858588a4bec8b21d3f519e2a9689471</upgradeSha>
      <sDescription>Dynamic range compressor. Gain calculation only. Envelope follower, attack, decay and VCA are not included.</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>comp.axh</helpPatch>
      <inlets>
         <frac32 name="in" description="in"/>
      </inlets>
      <outlets>
         <frac32 name="out" description="out"/>
      </outlets>
      <displays/>
      <params>
         <frac32.u.map name="tresh"/>
         <frac32.u.map name="ratio"/>
      </params>
      <attribs/>
      <code.declaration><![CDATA[int32_t frac_log(int32_t a) {
	Float_t f;
	f.f = a;
	int32_t r1 = ((f.parts.exponent&0x7F)-18) << 24;
	int32_t r3 = logt[f.parts.mantissa>>15]<<10;
	return r1 + r3;
}

int32_t frac_exp(int32_t a) {
	int8_t s = (a>>24)+4;
	uint8_t ei = a>>16;
	if (s>=0)
	     return expt[ei]<<s;
	else return expt[ei]>>(-s);
}
]]></code.declaration>
      <code.krate><![CDATA[int32_t inlog = frac_log(inlet_in);
int32_t treshlog = frac_log(param_tresh);
int32_t over = inlog-treshlog;
int32_t gain;
if (over<0){
	gain = 0x80000;
} else {
	gain = frac_exp(-___SMMUL(over,param_ratio)<<5);
}
outlet_out = gain<<8;//___SMMUL(inlet_in,gain);
]]></code.krate>
   </obj.normal>
</objdefs>