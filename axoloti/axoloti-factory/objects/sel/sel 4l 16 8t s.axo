<objdefs>
   <obj.normal id="sel 4l 16 8t s" uuid="b1ad0770345ac2d4d4d3462f1cdbbb37a9297810" sha="7e05530e916ee1e27c1327e5b3b7cb78b3c2b41c">
      <upgradeSha>5874af1fcaa701f47e62d25ac80b35b5eb5492af</upgradeSha>
      <sDescription>select one out of 16 4-levels, 8 tracks, row selector, chainable</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <inlets>
         <int32 name="in" description="in"/>
         <int32 name="row" description="row selector"/>
         <int32 name="def" description="default value"/>
      </inlets>
      <outlets>
         <int32 name="chain" description="chain out (in-16)"/>
         <int32 name="chainrow" description="chain out (row-8)"/>
         <int32 name="o" description="output"/>
      </outlets>
      <displays/>
      <params>
         <int2x16 name="t0"/>
         <int2x16 name="t1"/>
         <int2x16 name="t2"/>
         <int2x16 name="t3"/>
         <int2x16 name="t4"/>
         <int2x16 name="t5"/>
         <int2x16 name="t6"/>
         <int2x16 name="t7"/>
      </params>
      <attribs/>
      <code.krate><![CDATA[if ((inlet_in>=0)&&(inlet_in<16)) {
   switch(inlet_row){
    case 0: outlet_o=(param_t0>>(inlet_in*2))&3; break;
    case 1: outlet_o=(param_t1>>(inlet_in*2))&3; break;
    case 2: outlet_o=(param_t2>>(inlet_in*2))&3; break;
    case 3: outlet_o=(param_t3>>(inlet_in*2))&3; break;
    case 4: outlet_o=(param_t4>>(inlet_in*2))&3; break;
    case 5: outlet_o=(param_t5>>(inlet_in*2))&3; break;
    case 6: outlet_o=(param_t6>>(inlet_in*2))&3; break;
    case 7: outlet_o=(param_t7>>(inlet_in*2))&3; break;
    default: outlet_o = inlet_def;
   }
}else {
   outlet_o = inlet_def;
}
outlet_chain = inlet_in-16;
outlet_chainrow = inlet_row-8;
]]></code.krate>
   </obj.normal>
</objdefs>