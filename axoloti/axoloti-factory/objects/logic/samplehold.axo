<objdefs>
   <obj.normal id="samplehold" uuid="55479a62c4ed7e3536b6e6f339ce05a802a81b9d" sha="689ed4c57ac833433f51438a8662f35fa84ce2d7">
      <upgradeSha>332c0a95e3f565a482d970d66b76153dae8d7d92</upgradeSha>
      <sDescription>Pass through when s_h input is less or equal than zero or hold when positive.</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>samplehold.axh</helpPatch>
      <inlets>
         <frac32 name="in" description="input"/>
         <frac32 name="s_h" description="pass through when less or equal than zero or hold when positive"/>
      </inlets>
      <outlets>
         <frac32 name="out" description="output"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.declaration><![CDATA[   int32_t hold;
]]></code.declaration>
      <code.init><![CDATA[hold = 0;
]]></code.init>
      <code.krate><![CDATA[if (inlet_s__h<=0)
   hold = inlet_in;
outlet_out = hold;
]]></code.krate>
   </obj.normal>
   <obj.normal id="samplehold" uuid="354e2699eb9934cfdecc09f32e96284f3d10d78b" sha="9b3d54e03c3199e99622ef5205581993e05a88cb">
      <upgradeSha>37856879cf6c0ba2d84d25bca330b3c3615d474</upgradeSha>
      <sDescription>Pass through when s_h input is less or equal than zero or hold when positive.</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>samplehold.axh</helpPatch>
      <inlets>
         <frac32buffer name="in" description="input"/>
         <frac32buffer name="s_h" description="pass through when less or equal than zero or hold when positive"/>
      </inlets>
      <outlets>
         <frac32buffer name="out" description="output"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.declaration><![CDATA[   int32_t hold;
]]></code.declaration>
      <code.init><![CDATA[hold = 0;
]]></code.init>
      <code.srate><![CDATA[if (inlet_s__h<=0)
   hold = inlet_in;
outlet_out = hold;
]]></code.srate>
   </obj.normal>
</objdefs>