<objdefs>
   <obj.normal id="pink oct" uuid="3620b367bdce1ff32d38b1013d599e26a3308e30" sha="1fe0ab66d771dca042fba630a336ab5d07f3cf3">
      <upgradeSha>a591724f2d4958930ffd8ca14d025f0ce1d728c0</upgradeSha>
      <sDescription>Cheap almost pink noise
Range -64..64. Configureable number of octaves.</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <inlets/>
      <outlets>
         <frac32.bipolar name="out" description="pink noise"/>
      </outlets>
      <displays/>
      <params/>
      <attribs>
         <combo name="octaves">
            <MenuEntries>
               <string>1</string>
               <string>2</string>
               <string>3</string>
               <string>4</string>
               <string>5</string>
               <string>6</string>
               <string>7</string>
            </MenuEntries>
            <CEntries>
               <string>1</string>
               <string>2</string>
               <string>3</string>
               <string>4</string>
               <string>5</string>
               <string>6</string>
               <string>7</string>
            </CEntries>
         </combo>
      </attribs>
      <code.declaration><![CDATA[static const int noct = attr_octaves;
int32_t obuf[noct];
int32_t sum;
uint32_t seed;
int index;
const int8_t * dyadictree(void){
   static const int8_t dtree[] = {
   0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,
   0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,
   0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,
   0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7};
   return dtree;
}
]]></code.declaration>
      <code.init><![CDATA[int i;
for(i=0;i<noct;i++)
   obuf[i]=0;
index = 0;
sum = 0;
seed = 0x830af41e + GenerateRandomNumber();
]]></code.init>
      <code.krate><![CDATA[int o = dyadictree()[index++];
if (o==attr_octaves){
   index=0;
} else {
   sum -= obuf[o];
   seed = (seed * 196314165) + 907633515;
   obuf[o] = ((int32_t)seed)>>7;
   sum += obuf[o];
}
seed = (seed * 196314165) + 907633515;
outlet_out = sum + (((int32_t)seed)>>attr_octaves);
]]></code.krate>
   </obj.normal>
</objdefs>