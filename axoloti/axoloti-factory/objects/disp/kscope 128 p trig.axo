<objdefs>
   <obj.normal id="kscope 128 p trig" uuid="b1422e51800273c4e8afe943ddfa1441ecb7a77b" sha="a5f9636110f8db4452b440c106a58b0cc6ec2cd0">
      <upgradeSha>c693fd16d4c5da24d8fba4f073fac24bbc968a8</upgradeSha>
      <sDescription>positive control rate signal oscilloscope (time domain), showing 128 consecutive samples after the signal becomes positive.</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>kscope.axh</helpPatch>
      <rotatedParams>true</rotatedParams>
      <inlets>
         <frac32.positive name="in" description="input"/>
         <bool32 name="hold" description="hold"/>
      </inlets>
      <outlets/>
      <displays>
         <uint8array128.vbar name="scope" noLabel="true"/>
      </displays>
      <params/>
      <attribs/>
      <code.declaration><![CDATA[int8_t t[128];
int index;
int32_t pval;
]]></code.declaration>
      <code.init><![CDATA[int i;
for(i=0;i<128;i++) t[i]=0;
index = 0;
pval = 0;
]]></code.init>
      <code.krate><![CDATA[int i;
if (index<0) {
      int32_t val = (inlet_in)>(1<<19);
      if (val&&(!pval)){
         index=0;
      }
      pval = val;
   if (index == 0){
         t[index++]=(uint8_t)(inlet_in>>20);
   }
} else { 
   if(index==128) {
      index=-1;
   } else 
      t[index++]=(uint8_t)(inlet_in>>20);
   if ((index==-1)&&(!inlet_hold)){
     int i;
     for(i=0;i<128;i++)
       disp_scope[i]=t[i];
     pval = inlet_in>(1<<19);
   }
}
]]></code.krate>
   </obj.normal>
</objdefs>