<objdefs>
   <obj.normal id="echo fdbk mix" uuid="15716b14ebe691010ccfd54af72ea23232a843c6" sha="6bc1204ca59cfb6fe995e01f4a68be52ca63cd0">
      <upgradeSha>aec374119278da41c51ebfa3b4d9760e20da4be8</upgradeSha>
      <sDescription>Audio delay with feedback and mix, fixed delay time</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>delay.axh</helpPatch>
      <inlets>
         <frac32buffer name="in" description="input"/>
         <frac32 name="mix" description="mix"/>
         <frac32 name="feedback" description="feedback"/>
      </inlets>
      <outlets>
         <frac32buffer name="out" description="output"/>
      </outlets>
      <displays/>
      <params>
         <frac32.u.map name="mix"/>
         <frac32.u.map name="feedback"/>
      </params>
      <attribs>
         <spinner name="delaylength" MinValue="32" MaxValue="20000" DefaultValue="5000"/>
      </attribs>
      <code.declaration><![CDATA[uint32_t delaywindex;
uint32_t delayrindex;
int16_t delayline[attr_delaylength];
]]></code.declaration>
      <code.init><![CDATA[   int i;
   for(i=0;i<attr_delaylength;i++) delayline[i] = 0;
   delaywindex = 0;
   delayrindex = 1;
]]></code.init>
      <code.krate><![CDATA[  int32_t _mix = param_mix + inlet_mix;
   int32_t _fdbk = param_feedback + inlet_feedback;
]]></code.krate>
      <code.srate><![CDATA[ int32_t rd = delayline[delayrindex++];
delayline[delaywindex++] = __SSAT((inlet_in>>15) + ___SMMUL(rd<<5,_fdbk),16);
if (delayrindex == attr_delaylength) delayrindex = 0;
if (delaywindex == attr_delaylength) delaywindex = 0;
outlet_out = (inlet_in>>1) + (___SMMUL(rd<<16,_mix<<2));
]]></code.srate>
   </obj.normal>
</objdefs>