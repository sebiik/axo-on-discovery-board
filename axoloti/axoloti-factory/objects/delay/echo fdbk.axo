<objdefs>
   <obj.normal id="echo fdbk" uuid="1f4503fa4cd020010f59ce3ffa860caf0cd850c5" sha="f9b74c23e8d4ae4405f9e079da1ee902f6c728be">
      <upgradeSha>34f0f4688b9fa02573cd614eca7161c8957b3e7d</upgradeSha>
      <sDescription>Audio delay with feedback, fixed delay time</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>delay.axh</helpPatch>
      <inlets>
         <frac32buffer name="in" description="input"/>
         <frac32 name="feedback" description="feedback"/>
      </inlets>
      <outlets>
         <frac32buffer name="out" description="output"/>
      </outlets>
      <displays/>
      <params/>
      <attribs>
         <spinner name="delaylength" MinValue="32" MaxValue="20000" DefaultValue="5000"/>
      </attribs>
      <code.declaration><![CDATA[uint32_t delaywindex;
uint32_t delayrindex;
int16_t delayline[attr_delaylength];
]]></code.declaration>
      <code.init><![CDATA[   int i;
   for(i=0;i<attr_delaylength;i++) delayline[i] = 0;
   delaywindex = 0;
   delayrindex = 1;
]]></code.init>
      <code.srate><![CDATA[ int32_t rd = delayline[delayrindex++];
delayline[delaywindex++] = __SSAT((inlet_in>>14) + ___SMMUL(rd<<5,inlet_feedback),16);
if (delayrindex == attr_delaylength) delayrindex = 0;
if (delaywindex == attr_delaylength) delaywindex = 0;
outlet_out = rd<<14;
]]></code.srate>
   </obj.normal>
</objdefs>