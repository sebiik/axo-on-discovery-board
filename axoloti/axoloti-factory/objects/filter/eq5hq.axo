<objdefs>
   <obj.normal id="eq5hq" uuid="14171c909e5375c850d830e8fc1065b3d909cd1a" sha="86b9ea70474e26b5c841d42eeec97cb6c67456cc">
      <upgradeSha>e63b0387f974685f68e8c526d3b0f52cf6c91d4a</upgradeSha>
      <sDescription>Five-band equalizer. The transition frequencies are 100, 500, 2000, and 6000 Hz. High quality version. Unstable behavior when changing the low gain live.</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>eq5hq.axh</helpPatch>
      <inlets>
         <frac32buffer name="in" description="input"/>
      </inlets>
      <outlets>
         <frac32buffer name="out" description="output"/>
      </outlets>
      <displays/>
      <params>
         <int32 name="low">
            <MinValue i="-9"/>
            <MaxValue i="9"/>
         </int32>
         <int32 name="lowmid">
            <MinValue i="-9"/>
            <MaxValue i="9"/>
         </int32>
         <int32 name="mid">
            <MinValue i="-9"/>
            <MaxValue i="9"/>
         </int32>
         <int32 name="highmid">
            <MinValue i="-9"/>
            <MaxValue i="9"/>
         </int32>
         <int32 name="high">
            <MinValue i="-9"/>
            <MaxValue i="9"/>
         </int32>
      </params>
      <attribs/>
      <includes>
         <include>./eq5coefs.h</include>
      </includes>
      <code.declaration><![CDATA[q63_t biquadStateBand1Q31[4 * 2];
q63_t biquadStateBand2Q31[4 * 2];
q31_t biquadStateBand3Q31[4 * 2];
q31_t biquadStateBand4Q31[4 * 2];
q31_t biquadStateBand5Q31[4 * 2];
  arm_biquad_cas_df1_32x64_ins_q31 S1;
  arm_biquad_cas_df1_32x64_ins_q31 S2;
  arm_biquad_casd_df1_inst_q31 S3;
  arm_biquad_casd_df1_inst_q31 S4;
  arm_biquad_casd_df1_inst_q31 S5;
static const int NUMSTAGES=2;
]]></code.declaration>
      <code.init><![CDATA[  arm_biquad_cas_df1_32x64_init_q31(&S1, NUMSTAGES,
            (q31_t *) &eq5coefs[190*0 + 10*9],
            &biquadStateBand1Q31[0], 2);

  arm_biquad_cas_df1_32x64_init_q31(&S2, NUMSTAGES,
            (q31_t *) &eq5coefs[190*1 + 10*9],
            &biquadStateBand2Q31[0], 2);

  arm_biquad_cascade_df1_init_q31(&S3, NUMSTAGES,
          (q31_t *) &eq5coefs[190*2 + 10*9],
          &biquadStateBand3Q31[0], 2);

  arm_biquad_cascade_df1_init_q31(&S4, NUMSTAGES,
          (q31_t *) &eq5coefs[190*3 + 10*9],
          &biquadStateBand4Q31[0], 2);

  arm_biquad_cascade_df1_init_q31(&S5, NUMSTAGES,
          (q31_t *) &eq5coefs[190*4 + 10*9],
          &biquadStateBand5Q31[0], 2);
]]></code.init>
      <code.krate><![CDATA[S1.pCoeffs = (q31_t*)&eq5coefs[190*0 + 10*(param_low + 9)];
S2.pCoeffs = (q31_t*)&eq5coefs[190*1 + 10*(param_lowmid + 9)];
S3.pCoeffs = (q31_t*)&eq5coefs[190*2 + 10*(param_mid + 9)];
S4.pCoeffs = (q31_t*)&eq5coefs[190*3 + 10*(param_highmid + 9)];
S5.pCoeffs = (q31_t*)&eq5coefs[190*4 + 10*(param_high + 9)];

arm_biquad_cas_df1_32x64_q31(&S1, (q31_t *)inlet_in, (q31_t *)outlet_out, BUFSIZE);
arm_biquad_cas_df1_32x64_q31(&S2, (q31_t *)outlet_out, (q31_t *)outlet_out, BUFSIZE);
arm_biquad_cascade_df1_q31(&S3, (q31_t *)outlet_out, (q31_t *)outlet_out, BUFSIZE);
arm_biquad_cascade_df1_q31(&S4, (q31_t *)outlet_out, (q31_t *)outlet_out, BUFSIZE);
arm_biquad_cascade_df1_q31(&S5, (q31_t *)outlet_out, (q31_t *)outlet_out, BUFSIZE);
]]></code.krate>
   </obj.normal>
</objdefs>