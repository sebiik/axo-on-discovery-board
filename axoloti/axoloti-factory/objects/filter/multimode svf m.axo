<objdefs>
   <obj.normal id="multimode svf m" uuid="71d5f8b2131b691d591a9a9ee28771309f8938d" sha="4090d6ffd6000f64e953e5e7aab37348c0763c86">
      <upgradeSha>c10a30fcf81456fb74bceab1163c587cfa7112d5</upgradeSha>
      <sDescription>multimode filter, state-variable type, modulation inputs</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>filter.axh</helpPatch>
      <inlets>
         <frac32buffer name="in" description="filter input"/>
         <frac32 name="pitch" description="pitch"/>
         <frac32 name="reso" description="resonance"/>
      </inlets>
      <outlets>
         <frac32buffer name="hp" description="highpass filter output"/>
         <frac32buffer name="bp" description="bandpass filter output"/>
         <frac32buffer name="lp" description="lowpass filter output"/>
      </outlets>
      <displays/>
      <params>
         <frac32.s.map.pitch name="pitch"/>
         <frac32.u.map.filterq name="reso"/>
      </params>
      <attribs/>
      <code.declaration><![CDATA[int32_t low;
int32_t band;
]]></code.declaration>
      <code.init><![CDATA[low = 0;
band = 0;
]]></code.init>
      <code.krate><![CDATA[int32_t damp = (0x80<<24) - (__USAT(inlet_reso + param_reso,27)<<4);
damp = ___SMMUL(damp,damp);
int32_t alpha;
int32_t freq;
int32_t pitch = __SSAT(param_pitch+inlet_pitch,28);
MTOFEXTENDED(pitch,alpha);
SINE2TINTERP(alpha,freq);
]]></code.krate>
      <code.srate><![CDATA[int32_t in1 = inlet_in;
int32_t notch = inlet_in - (___SMMUL(damp,band)<<1);
low = low + (___SMMUL(freq,band)<<1);
int32_t high  = notch - low;
band = (___SMMUL(freq,high)<<1) + band;// - drive*band*band*band;
outlet_lp = low;
outlet_hp = high;
outlet_bp = band;
]]></code.srate>
   </obj.normal>
</objdefs>