<objdefs>
   <obj.normal id="xfade" uuid="bb87360199938d53d1183cdc80947ed0a39e3c9a" sha="5f3afbcb5737db365d029496323420815367c522">
      <upgradeSha>26e6531ae932c0933646b409d957264faeee6fca</upgradeSha>
      <sDescription>crossfade between two inputs</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <inlets>
         <frac32 name="i1" description="input"/>
         <frac32 name="i2" description="input"/>
         <frac32.positive name="c" description="control"/>
      </inlets>
      <outlets>
         <frac32 name="o" description="output"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[   {
      int64_t a = (int64_t)inlet_i2 * inlet_c;
      a += (int64_t)inlet_i1 * ((128<<20)-inlet_c);
      outlet_o= a>>27;
   }
]]></code.krate>
   </obj.normal>
   <obj.normal id="xfade" uuid="cfac82d503dc55fd2e3f90d8d05283610532b8c4" sha="8707ff69830477dee45ce9254818bbe3bd42450e">
      <upgradeSha>e301a25211e0b6899b8b54c25e7ac5d9f404eda0</upgradeSha>
      <sDescription>crossfade between two inputs</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <inlets>
         <frac32buffer name="i1" description="input"/>
         <frac32buffer name="i2" description="input"/>
         <frac32buffer.positive name="c" description="control"/>
      </inlets>
      <outlets>
         <frac32buffer name="o" description="output"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.srate><![CDATA[   {
      int64_t a = (int64_t)inlet_i2 * inlet_c;
      a += (int64_t)inlet_i1 * ((128<<20)-inlet_c);
      outlet_o= a>>27;
   }
]]></code.srate>
   </obj.normal>
   <obj.normal id="xfade" uuid="375dc91d218e96cdc9cbc7e92adb48f705ef701a" sha="46677d62cd61f18b6996ffad67cd94b74cd98f2d">
      <upgradeSha>7c7bb910e14c9ba3614f189bb924c86ca0a86890</upgradeSha>
      <sDescription>crossfade between two inputs</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <inlets>
         <frac32buffer name="i1" description="input"/>
         <frac32buffer name="i2" description="input"/>
         <frac32.positive name="c" description="control"/>
      </inlets>
      <outlets>
         <frac32buffer name="o" description="output"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[   int32_t ccompl = ((128<<20)-inlet_c);
]]></code.krate>
      <code.srate><![CDATA[   {
      int64_t a = (int64_t)inlet_i2 * inlet_c;
      a += (int64_t)inlet_i1 * ccompl;
      outlet_o= a>>27;
   }
]]></code.srate>
   </obj.normal>
</objdefs>