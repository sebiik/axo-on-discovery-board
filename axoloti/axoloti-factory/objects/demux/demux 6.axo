<objdefs>
   <obj.normal id="demux 6" uuid="cb78338d8c52dff2477dc61eb5e289634ef7426b" sha="61c0709c703dd2c0f661f6a0136ca8b7dade730d">
      <upgradeSha>1cfce3391269a8d8bdfd752619d4bce778538c82</upgradeSha>
      <sDescription>Demultiplexer. Connects inlet i to outlet number s. Other outlets copy their corresponding default inlets.</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>demux 3.axh</helpPatch>
      <inlets>
         <frac32 name="i" description="input"/>
         <frac32 name="d0" description="default 0"/>
         <frac32 name="d1" description="default 1"/>
         <frac32 name="d2" description="default 2"/>
         <frac32 name="d3" description="default 3"/>
         <frac32 name="d4" description="default 4"/>
         <frac32 name="d5" description="default 5"/>
         <int32.positive name="s" description="select"/>
      </inlets>
      <outlets>
         <frac32 name="o0" description="output 0"/>
         <frac32 name="o1" description="output 1"/>
         <frac32 name="o2" description="output 2"/>
         <frac32 name="o3" description="output 3"/>
         <frac32 name="o4" description="output 4"/>
         <frac32 name="o5" description="output 5"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[   switch(inlet_s>0?inlet_s:0){
      case 0: 
         outlet_o0 = inlet_i;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         break;
      case 1: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_i;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         break;
      case 2: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_i;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         break;
      case 3: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_i;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         break;
      case 4: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_i;
         outlet_o5 = inlet_d5;
         break;
      case 5: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_i;
         break;
      default:
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
}
]]></code.krate>
   </obj.normal>
   <obj.normal id="demux 6" uuid="cc1ea292507d4b09fe2a499e7b9d8844cf37cf60" sha="93c7c4eb74197b0e256935232e818078792c75d1">
      <upgradeSha>753569248056d05cab68fb61cabbe55897984e6</upgradeSha>
      <sDescription>Demultiplexer. Connects inlet i to outlet number s. Other outlets copy their corresponding default inlets.</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>demux 3.axh</helpPatch>
      <inlets>
         <int32 name="i" description="input"/>
         <int32 name="d0" description="default 0"/>
         <int32 name="d1" description="default 1"/>
         <int32 name="d2" description="default 2"/>
         <int32 name="d3" description="default 3"/>
         <int32 name="d4" description="default 4"/>
         <int32 name="d5" description="default 5"/>
         <int32.positive name="s" description="select"/>
      </inlets>
      <outlets>
         <int32 name="o0" description="output 0"/>
         <int32 name="o1" description="output 1"/>
         <int32 name="o2" description="output 2"/>
         <int32 name="o3" description="output 3"/>
         <int32 name="o4" description="output 4"/>
         <int32 name="o5" description="output 5"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[   switch(inlet_s>0?inlet_s:0){
      case 0: 
         outlet_o0 = inlet_i;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         break;
      case 1: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_i;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         break;
      case 2: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_i;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         break;
      case 3: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_i;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         break;
      case 4: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_i;
         outlet_o5 = inlet_d5;
         break;
      case 5: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_i;
         break;
      default:
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
}
]]></code.krate>
   </obj.normal>
   <obj.normal id="demux 6" uuid="aa115ea2b4fac02b21a72176b57a0ac5b0ca5b70" sha="3a0f5a41c4677faf1f0ae8aaea4d5382114d5c04">
      <upgradeSha>92207c0aae020018a636a519eda04cf89338456c</upgradeSha>
      <sDescription>Demultiplexer. Connects inlet i to outlet number s. Other outlets copy their corresponding default inlets.</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>demux 3.axh</helpPatch>
      <inlets>
         <frac32buffer name="i" description="input"/>
         <frac32buffer name="d0" description="default 0"/>
         <frac32buffer name="d1" description="default 1"/>
         <frac32buffer name="d2" description="default 2"/>
         <frac32buffer name="d3" description="default 3"/>
         <frac32buffer name="d4" description="default 4"/>
         <frac32buffer name="d5" description="default 5"/>
         <int32.positive name="s" description="select"/>
      </inlets>
      <outlets>
         <frac32buffer name="o0" description="output 0"/>
         <frac32buffer name="o1" description="output 1"/>
         <frac32buffer name="o2" description="output 2"/>
         <frac32buffer name="o3" description="output 3"/>
         <frac32buffer name="o4" description="output 4"/>
         <frac32buffer name="o5" description="output 5"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.srate><![CDATA[   switch(inlet_s>0?inlet_s:0){
      case 0: 
         outlet_o0 = inlet_i;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         break;
      case 1: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_i;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         break;
      case 2: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_i;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         break;
      case 3: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_i;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         break;
      case 4: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_i;
         outlet_o5 = inlet_d5;
         break;
      case 5: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_i;
         break;
      default:
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
}
]]></code.srate>
   </obj.normal>
   <obj.normal id="demux 6" uuid="e37a02794b9e6c8a0f813ee58b0c5bff84dbde41" sha="778c17f61c68a31ffa0b8b89cc3b66baf971146f">
      <upgradeSha>1fa6623ce71de2739aa1aa28ba64f03f1a37601b</upgradeSha>
      <sDescription>Demultiplexer. Connects inlet i to outlet number s. Other outlets copy their corresponding default inlets.</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>demux 3.axh</helpPatch>
      <inlets>
         <bool32 name="i" description="input"/>
         <bool32 name="d0" description="default 0"/>
         <bool32 name="d1" description="default 1"/>
         <bool32 name="d2" description="default 2"/>
         <bool32 name="d3" description="default 3"/>
         <bool32 name="d4" description="default 4"/>
         <bool32 name="d5" description="default 5"/>
         <int32.positive name="s" description="select"/>
      </inlets>
      <outlets>
         <bool32 name="o0" description="output 0"/>
         <bool32 name="o1" description="output 1"/>
         <bool32 name="o2" description="output 2"/>
         <bool32 name="o3" description="output 3"/>
         <bool32 name="o4" description="output 4"/>
         <bool32 name="o5" description="output 5"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[   switch(inlet_s>0?inlet_s:0){
      case 0: 
         outlet_o0 = inlet_i;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         break;
      case 1: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_i;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         break;
      case 2: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_i;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         break;
      case 3: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_i;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
         break;
      case 4: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_i;
         outlet_o5 = inlet_d5;
         break;
      case 5: 
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_i;
         break;
      default:
         outlet_o0 = inlet_d0;
         outlet_o1 = inlet_d1;
         outlet_o2 = inlet_d2;
         outlet_o3 = inlet_d3;
         outlet_o4 = inlet_d4;
         outlet_o5 = inlet_d5;
}
]]></code.krate>
   </obj.normal>
</objdefs>